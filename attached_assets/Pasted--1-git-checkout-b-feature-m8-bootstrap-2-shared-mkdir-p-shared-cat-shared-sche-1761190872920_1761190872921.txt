# 1) 建分支
git checkout -b feature/m8-bootstrap

# 2) 補 shared 型別
mkdir -p shared && cat > shared/schema.ts <<'TS'
export type UserRole = 'user' | 'poweruser' | 'admin' | 'superadmin';
export interface UserDoc {
  displayName: string;
  pictureUrl?: string;
  lineUserId?: string;
  roles: Record<UserRole, boolean>;
  createdAt: number;
  lastLoginAt: number;
}
export interface Patrol {
  id: string; name: string; qr: string; active: boolean; createdAt: number;
}
export interface Checkin {
  id: string;
  uid: string;
  patrolId: string;
  ts: number;
  meta?: { ua?: string; ip?: string };
}
TS

# 3) firebase-admin（保留你現有程式，只補 exports）
mkdir -p server/lib && cat > server/lib/firebase-admin.ts <<'TS'
import admin from 'firebase-admin';

let app: admin.app.App | undefined;
if (!admin.apps.length) {
  const raw = process.env.FIREBASE_SERVICE_ACCOUNT_JSON;
  if (!raw) throw new Error('[firebaseAdmin] Missing FIREBASE_SERVICE_ACCOUNT_JSON');
  const creds = JSON.parse(raw);
  app = admin.initializeApp({
    credential: admin.credential.cert({
      projectId: creds.project_id,
      clientEmail: creds.client_email,
      privateKey: creds.private_key?.replace(/\\n/g, '\n'),
    }),
  });
} else {
  app = admin.app();
}

export const adminAuth = admin.auth(app);
export const adminDb = admin.firestore(app);
export const projectId = process.env.FIREBASE_PROJECT_ID || admin.app().options.projectId || 'unknown';
TS

# 4) routes：新增 upsert 與 ping-profile、補 webhook 關鍵字回覆
cat > server/routes.ts <<'TS'
import type { Express, Request, Response } from 'express';
import { adminAuth, adminDb } from './lib/firebase-admin';
import fetch from 'node-fetch';

const KEYWORDS: Record<string,string> = {
  '奉香簽到': 'https://go.guimashan.org.tw/checkin/',
  '志工排班': 'https://go.guimashan.org.tw/schedule/',
  '神服服務': 'https://go.guimashan.org.tw/service/',
  // 可持續補完你的表
};

export function mountRoutes(app: Express) {
  // 既有健康檢查（保留）
  app.get('/api/ping-admin', async (_, res) => res.json({ ok: true }));

  // M8-1：登入落地（需前端把 Firebase ID Token 放在 Authorization: Bearer <idToken>）
  app.post('/api/profile/upsert', async (req: Request, res: Response) => {
    try {
      const auth = req.headers.authorization || '';
      const m = auth.match(/^Bearer\s+(.+)$/);
      if (!m) return res.status(401).json({ ok: false, error: 'missing_id_token' });
      const decoded = await adminAuth.verifyIdToken(m[1]);
      const uid = decoded.uid;
      const { displayName, pictureUrl, lineUserId } = req.body || {};
      const now = Date.now();
      const ref = adminDb.collection('users').doc(uid);
      const snap = await ref.get();
      if (!snap.exists) {
        await ref.set({
          displayName: displayName || decoded.name || '未命名',
          pictureUrl: pictureUrl || decoded.picture || '',
          lineUserId: lineUserId || decoded.sub || '',
          roles